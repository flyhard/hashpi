---
###############################################################################
################################# INSTALL #####################################
###############################################################################
- name: Read package checksum file
  local_action: stat path="{{ role_path }}/files/consul_{{ consul_version }}_SHA256SUMS"
  become: no
  run_once: true
  register: consul_checksum
  tags: 
    - installation
    - consul

- name: Download package checksum file
  local_action: get_url url="{{ consul_checksum_file_url }}" dest="{{ role_path }}/files/consul_{{ consul_version }}_SHA256SUMS"
  become: no
  run_once: true
  tags: 
    - installation
    - consul
  when: not consul_checksum.stat.exists | bool

- name: Read package checksum
  local_action: shell grep "{{ consul_pkg }}" "{{ role_path }}/files/consul_{{ consul_version }}_SHA256SUMS" | awk '{print $1}'
  become: no
  run_once: true
  register: consul_sha256
  tags: 
    - installation
    - consul

- name: Check Consul package file
  local_action: stat path="{{ role_path }}/files/{{ consul_pkg }}"
  become: no
  run_once: true
  register: consul_package
  tags: 
    - installation
    - consul

- name: Download Consul package
  local_action: get_url url="{{ consul_zip_url }}" dest="{{ role_path }}/files/{{ consul_pkg }}" checksum="sha256:{{ consul_sha256.stdout }}" timeout="42"
  become: no
  run_once: true
  tags: 
    - installation
    - consul
  when: not consul_package.stat.exists | bool

- name: Unarchive Consul package
  local_action: unarchive src="{{ role_path }}/files/{{ consul_pkg }}" dest="{{ role_path }}/files/" creates="{{ role_path }}/files/consul"
  become: no
  run_once: true
  tags: 
    - installation
    - consul

- name: Install Consul
  copy:
    src: "{{ role_path }}/files/consul"
    dest: "{{ consul_install_path }}/consul"
    owner: "{{ consul_owner }}"
    group: "{{ consul_group }}"
    mode: 0755
  become: yes
  tags: 
    - installation
    - consul

- name: Cleanup
  local_action: file path="{{ item }}" state="absent"
  become: no
  with_fileglob: "{{ role_path }}/files/consul"
  run_once: true
  tags: 
    - installation
    - consul

###############################################################################
################################ CONFIGURE ####################################
###############################################################################

- block:
  # - name: deploy tls files
  #   copy:
  #     src: "{{ item.src }}"
  #     dest: "{{ item.dest }}"
  #   with_items:
  #     - src: etc/consul/ssl/cacert.pem
  #       dest: /etc/consul/ssl/{{ consul_ca_file }}
  #     - src: etc/consul/ssl/certs/consul.cert.pem
  #       dest: /etc/consul/ssl/{{ consul_cert_file }}
  #     - src: etc/consul/ssl/private/consul.key.pem
  #       dest: /etc/consul/ssl/{{ consul_key_file }}
  #   when: consul_do_ssl
  #   notify:
  #     - restart consul
  #   tags:
  #     - consul

  - name: install consul scripts
    copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      mode: 0755
    with_items:
      - src: consul-wait-for-leader.sh
        dest: /usr/local/bin
      - src: consul-destroy-install.sh
        dest: /usr/local/bin
    tags:
      - consul

  - name: configure for systemd
    copy:
      src: consul.service
      dest: "{{ systemd_dir }}/consul.service"
      mode: 644
    tags:
      - consul
  - name: reload systemd
    systemd:
      daemon_reload: yes
      name: consul.service
      state: restarted
    tags:
      - consul

  - name: Create config folder
    file:
      path: /etc/consul
      state: directory
      mode: 0755
    tags:
    - consul
  - name: configure consul
    template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      mode: u=rw,g=r,o=r
    with_items:
      - src: consul.json.j2
        dest: /etc/consul/consul.json
    notify:
      - restart consul
    tags:
      - consul

  - name: enable consul
    service:
      name: consul
      enabled: yes
      state: started
    tags:
      - consul

  become: yes
  become_user: root

- pause:
    seconds: 3

- name: join cluster of consul-dcs
  command: "/usr/local/bin/consul join {{ groups['consul'] | random }}"
  run_once: yes
  tags:
    - consul

- name: wait for leader
  command: /usr/local/bin/consul-wait-for-leader.sh
  register: leader_status
  tags:
    - consul
